# Generated by Django 4.2.7 on 2025-07-02 15:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ChangeDetectionJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("before_image_path", models.CharField(max_length=500)),
                ("after_image_path", models.CharField(max_length=500)),
                ("before_date", models.DateField()),
                ("after_date", models.DateField()),
                ("model_name", models.CharField(default="local_unet", max_length=100)),
                ("change_threshold", models.FloatField(default=0.3)),
                ("minimum_change_area_m2", models.FloatField(default=100.0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("progress_percentage", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("change_map_path", models.CharField(blank=True, max_length=500)),
                ("total_changed_area_m2", models.FloatField(blank=True, null=True)),
                ("change_percentage", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("processing_time_seconds", models.IntegerField(blank=True, null=True)),
                (
                    "aoi",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.areaofinterest"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "Change Detection Job",
                "verbose_name_plural": "Change Detection Jobs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ModelMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("model_name", models.CharField(max_length=100)),
                ("version", models.CharField(max_length=20)),
                ("accuracy", models.FloatField()),
                ("precision", models.FloatField()),
                ("recall", models.FloatField()),
                ("f1_score", models.FloatField()),
                ("iou_score", models.FloatField()),
                ("training_data_size", models.IntegerField()),
                ("validation_data_size", models.IntegerField()),
                ("epochs_trained", models.IntegerField()),
                ("model_file_path", models.CharField(max_length=500)),
                ("model_size_mb", models.FloatField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Model Metrics",
                "verbose_name_plural": "Model Metrics",
            },
        ),
        migrations.CreateModel(
            name="ChangeDetectionResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "change_type",
                    models.CharField(
                        choices=[
                            ("urban_expansion", "Urban Expansion"),
                            ("deforestation", "Deforestation"),
                            ("water_change", "Water Body Change"),
                            ("vegetation_loss", "Vegetation Loss"),
                            ("other", "Other Change"),
                        ],
                        default="other",
                        max_length=30,
                    ),
                ),
                ("confidence_score", models.FloatField()),
                ("total_aoi_area_m2", models.FloatField()),
                ("changed_area_m2", models.FloatField()),
                ("unchanged_area_m2", models.FloatField()),
                ("change_percentage", models.FloatField()),
                ("change_polygons_geojson", models.JSONField(blank=True, null=True)),
                ("urban_change_m2", models.FloatField(default=0.0)),
                ("vegetation_change_m2", models.FloatField(default=0.0)),
                ("water_change_m2", models.FloatField(default=0.0)),
                ("processing_quality", models.CharField(default="good", max_length=20)),
                ("cloud_interference", models.FloatField(default=0.0)),
                ("shadow_interference", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="detailed_result",
                        to="change_detection.changedetectionjob",
                    ),
                ),
            ],
            options={
                "verbose_name": "Change Detection Result",
                "verbose_name_plural": "Change Detection Results",
            },
        ),
        migrations.CreateModel(
            name="AlertThreshold",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("minimum_change_percentage", models.FloatField(default=5.0)),
                ("minimum_change_area_m2", models.FloatField(default=1000.0)),
                ("alert_on_urban_expansion", models.BooleanField(default=True)),
                ("alert_on_deforestation", models.BooleanField(default=True)),
                ("alert_on_water_change", models.BooleanField(default=False)),
                ("alert_on_vegetation_loss", models.BooleanField(default=True)),
                ("max_alerts_per_week", models.IntegerField(default=3)),
                ("last_alert_sent", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "aoi",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.areaofinterest"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "Alert Threshold",
                "verbose_name_plural": "Alert Thresholds",
            },
        ),
    ]
