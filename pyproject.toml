[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "change-detection-system"
version = "1.0.0"
description = "A robust, automated satellite-based change detection and alerting system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Change Detection Team", email = "team@changedetection.example.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Image Processing",
]
keywords = ["satellite", "change-detection", "remote-sensing", "machine-learning", "gis"]
requires-python = ">=3.8"
dependencies = [
    "django>=4.2.0",
    "djangorestframework>=3.14.0",
    "celery>=5.2.0",
    "redis>=4.5.0",
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "scikit-learn>=1.2.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "opencv-python>=4.7.0",
    "rasterio>=1.3.0",
    "geopandas>=0.12.0",
    "shapely>=2.0.0",
    "pyproj>=3.4.0",
    "fiona>=1.8.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "plotly>=5.14.0",
    "requests>=2.28.0",
    "Pillow>=9.4.0",
    "tqdm>=4.64.0",
    "python-dotenv>=1.0.0",
    "psycopg2-binary>=2.9.0",
    "gunicorn>=20.1.0",
    "whitenoise>=6.4.0",
    "django-cors-headers>=4.0.0",
    "django-extensions>=3.2.0",
    "shap>=0.41.0",
    "lime>=0.2.0",
    "simplekml>=1.3.0",
    "schedule>=1.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.2.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
]
test = [
    "pytest>=7.2.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0.0",
    "factory-boy>=3.2.0",
    "faker>=18.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/changedetection/change-detection-system"
Documentation = "https://change-detection-system.readthedocs.io"
Repository = "https://github.com/changedetection/change-detection-system.git"
"Bug Tracker" = "https://github.com/changedetection/change-detection-system/issues"

[project.scripts]
change-detection = "src.changedetection.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["changedetection*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "src.web.backend.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src/changedetection",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_django = ["django"]
known_first_party = ["changedetection"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
exclude = [
    "migrations/",
    "venv/",
    ".venv/",
]

[tool.coverage.run]
source = ["src/changedetection"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/manage.py",
    "*/settings/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 